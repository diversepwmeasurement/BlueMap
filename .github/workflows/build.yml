jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: '16

          17

          '
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew clean spotlessCheck test build
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: build/release/*
  docker:
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: build/release
    - continue-on-error: true
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.repository_owner }}
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      id: metadata
      name: Docker metadata
      uses: docker/metadata-action@v4
      with:
        flavor: 'latest=false

          '
        images: ghcr.io/${{ github.repository }}
        tags: 'type=raw,value={{branch}}

          type=raw,value=latest,enable=${{ startsWith(github.ref, ''refs/tags/'')
          }}

          type=raw,value={{tag}},enable=${{ startsWith(github.ref, ''refs/tags/'')
          }}

          type=match,pattern=v\d+,group=0,enable=${{ startsWith(github.ref, ''refs/tags/'')
          }}

          '
    - continue-on-error: true
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        labels: ${{ steps.metadata.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ steps.metadata.outputs.tags }}
name: Build
on:
  repository_dispatch:
    types: trigger-ga___build.yml
